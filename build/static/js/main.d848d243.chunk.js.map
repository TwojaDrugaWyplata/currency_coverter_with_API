{"version":3,"sources":["background-picture.jpg","Header/styled.js","Header/index.js","Footer/styled.js","Footer/index.js","Container/styled.js","Container/index.js","Form/Clock/styled.js","Form/Clock/formatTime.js","Form/Clock/index.js","Form/Clock/useCurrentTime.js","Form/styled.js","Form/index.js","Result/styled.js","Result/index.js","App.js","useRatesData.js","serviceWorker.js","theme.js","GlobalStyle.js","index.js"],"names":["module","exports","Wrapper","styled","header","theme","color","bigStone","breakpoint","mobile","Content","p","sun","Header","FooterContent","footer","black","Footer","Main","main","Container","children","Display","dateTemplate","weekday","day","month","hour","minute","second","Clock","currentTime","useState","Date","setCurrentTime","useEffect","intervalId","setInterval","clearInterval","useCurrentTime","toLocaleDateString","undefined","FormSheet","form","LabelText","span","Label","label","Fieldset","fieldset","Legend","legend","Input","input","Button","button","Text","div","Form","calculateResult","ratesData","amount","setAmount","sourceCurrency","setSourceCurrency","targetCurrency","setTargetCurrency","options","Object","keys","map","plnRate","key","onSubmit","event","preventDefault","required","type","step","min","max","value","onChange","target","as","ResultBox","Result","result","App","setResult","setRatesData","axios","get","then","response","catch","useRatesData","plnRates","resultValue","toFixed","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","background","ReactDOM","render","StrictMode","sunset","blackend","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.d848d243.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background-picture.93df400b.jpg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.header`\n    display: block;\n    padding: 30px;\n    font-size: 45px;\n    background-color: ${({ theme }) => theme.color.bigStone};\n    text-align: center;\n\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\n        font-size: 30px;\n    }\n`\nexport const Content = styled.p`\n    color: ${({ theme }) => theme.color.sun};\n`","import React from 'react';\nimport { Wrapper, Content } from \"./styled\";\n\nconst Header = () => (\n    <Wrapper>\n        <Content>Kantor na pniu :)</Content>\n    </Wrapper>\n)\nexport default Header;","import styled from \"styled-components\";\n\nexport const FooterContent = styled.footer`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    padding: 20px;\n    background-color: ${({ theme }) => theme.color.black};\n    color: ${({ theme }) => theme.color.sun};\n    text-align: center;\n`","import React from 'react';\nimport { FooterContent } from \"./styled\";\n\nconst Footer = () => (\n    <FooterContent>\n        Pawe≈Ç Szymczak 2020\n    </FooterContent>\n)\nexport default Footer;","import styled from \"styled-components\";\n\nexport const Main = styled.main`\n    margin: 0 auto 50px;\n    max-width: 800px;\n`;\n","import React from \"react\";\nimport { Main } from \"./styled\";\n\nconst Container = ({ children }) => (\n    <Main>{children}</Main>\n)\nexport default Container;","import styled from \"styled-components\";\n\nexport const Display = styled.p`\n    padding-right: 20px;\n    text-align: right;\n    font-family: 'Merienda';\n    font-size: 14px;\n`;","const dateTemplate = {\n    weekday: \"long\",\n    day: \"numeric\",\n    month: \"long\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n};\n\nexport const formatTime = (time) => {\n    return time.toLocaleDateString(undefined, dateTemplate)\n};","import React from 'react';\nimport { Display } from \"./styled\";\nimport { useCurrentTime } from \"./useCurrentTime\";\nimport { formatTime } from \"./formatTime\";\n\nconst Clock = () => {\n    const currentTime = useCurrentTime();\n\n    return (\n        <Display>\n            Dzisiaj jest {formatTime(currentTime)}\n        </Display>\n    )\n};\nexport default Clock;","import { useState, useEffect } from \"react\";\n\nexport const useCurrentTime = () => {\n    const [currentTime, setCurrentTime] = useState(new Date());\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            setCurrentTime(new Date());\n        }, 1000);\n\n        return () => {\n            clearInterval(intervalId);\n        }\n    }, []);\n\n    return currentTime;\n}","import styled from \"styled-components\";\n\nexport const FormSheet = styled.form`\n    margin-top: 50px;\n`;\nexport const LabelText = styled.span`\n    text-align: center;\n`;\nexport const Label = styled.label`\n    max-width: 600px;\n    display: grid;\n    grid-template-columns: auto 400px;\n    grid-gap: 10px;\n    justify-content: space-between;\n    align-items: center;\n    margin: 20px auto;\n\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\n        grid-template-columns: 1fr;\n    }\n`;\nexport const Fieldset = styled.fieldset`\n    background-color: ${({ theme }) => theme.color.sun};\n    color: ${({ theme }) => theme.color.bigStone};\n    border: 5px solid ${({ theme }) => theme.color.black};\n    border-radius: 20px;\n`;\nexport const Legend = styled.legend`\n    background-color: ${({ theme }) => theme.color.bigStone};\n    padding: 20px 40px;\n    color: ${({ theme }) => theme.color.sun};\n    border: 5px solid ${({ theme }) => theme.color.black};\n    border-radius: 20px;\n    text-align: center;\n`;\nexport const Input = styled.input`\n    padding: 10px;\n    border: 3px solid ${({ theme }) => theme.color.black};\n    border-radius: 10px;\n`;\nexport const Button = styled.button`\n    display: block;\n    margin: auto;\n    border-radius: 20px;\n    border: 5px solid ${({ theme }) => theme.color.black};\n    color: ${({ theme }) => theme.color.sun};\n    background-color: ${({ theme }) => theme.color.bigStone};\n    padding: 20px 50px;\n    text-transform: inherit;\n    font-weight: inherit;\n    cursor: pointer;\n\n    &:hover {\n        filter: brightness(120%);\n    }\n    &:active {\n        filter: brightness(140%);\n    }\n`;\nexport const Text = styled.div`\n    margin: auto;\n    padding: 20px;\n    text-align: center;\n`;\n","import React, { useState } from 'react';\nimport Clock from './Clock';\nimport {\n    FormSheet,\n    Fieldset,\n    Legend,\n    Label,\n    LabelText,\n    Input,\n    Button,\n    Text\n} from \"./styled\";\n\nconst Form = ({ calculateResult, ratesData }) => {\n    const [amount, setAmount] = useState(\"\");\n    const [sourceCurrency, setSourceCurrency] = useState(\"PLN\");\n    const [targetCurrency, setTargetCurrency] = useState(\"USD\");\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        calculateResult(+amount, sourceCurrency, targetCurrency);\n    }\n    const options = ratesData[\"data\"]\n        && Object.keys(ratesData[\"data\"][\"rates\"]).map(plnRate =>\n            <option key={plnRate}>{plnRate}</option>);\n\n\n    return (\n        <FormSheet onSubmit={onFormSubmit}>\n            <Fieldset>\n                <Legend>Przelicznik walut</Legend>\n                <Clock />\n                {ratesData[\"data\"]\n                    ? <>\n                        <Label>\n                            <LabelText>Kwota:</LabelText>\n                            <Input\n                                required\n                                type=\"number\"\n                                step=\"0.01\"\n                                min=\"1\"\n                                max=\"999999\"\n                                value={amount}\n                                onChange={({ target }) => setAmount(target.value)}\n                            />\n                        </Label>\n                        <Label>\n                            <LabelText>Posiadana waluta:</LabelText>\n                            <Input\n                                as=\"select\"\n                                value={sourceCurrency}\n                                onChange={({ target }) => setSourceCurrency(target.value)}\n                            >\n                                {options}\n                            </Input>\n                        </Label>\n                        <Label>\n                            <LabelText>Oczekiwana waluta:</LabelText>\n                            <Input\n                                as=\"select\"\n                                value={targetCurrency}\n                                onChange={({ target }) => setTargetCurrency(target.value)}\n                            >\n                                {options}\n                            </Input>\n                        </Label>\n                        <Button>Wymie≈Ñ</Button>\n                        <Text>\n                            Kursy walut pochodzƒÖ z Europejskiego Banku Centralnego.<br />\n                            Aktualne na dzie≈Ñ: {ratesData[\"data\"][\"date\"]}\n                        </Text>\n                    </>\n                    : ratesData === \"error\"\n                        ? <Text>\n                            WystƒÖpi≈Ç b≈ÇƒÖd. Sprawd≈∫ po≈ÇƒÖczenie internetowe,\n                            a je≈õli to nie pomo≈ºe - spr√≥buj ponownie p√≥≈∫niej.\n                        </Text>\n                        : <Text>\n                            Trwa pobieranie danych z Europejskiego Banku Centralnego.\n                        </Text>\n                }\n            </Fieldset>\n        </FormSheet>\n    )\n}\nexport default Form;","import styled from \"styled-components\";\n\nexport const ResultBox = styled.p`\n    text-align: center;\n    font-size: 20px;\n    background-color: ${({ theme }) => theme.color.bigStone};\n    border: 5px solid #000000;\n    border-radius: 20px;\n    color: ${({ theme }) => theme.color.sun};\n    padding: 10px;\n    min-height: 2em;\n    line-height: 1.5;\n`","import React from 'react';\nimport { ResultBox } from \"./styled\";\n\nconst Result = ({ result }) => {\n    return result &&\n        <ResultBox>\n            Otrzymujesz {result}. MƒÖdrze je zagospodaruj :)\n        </ResultBox>;\n}\nexport default Result;","import React, { useState } from 'react';\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Container from \"./Container\";\nimport Form from \"./Form\";\nimport Result from \"./Result\";\nimport { useRatesData } from \"./useRatesData\";\n\nconst App = () => {\n    const [result, setResult] = useState(\"\");\n    const ratesData = useRatesData();\n\n    const calculateResult = (amount, sourceCurrency, targetCurrency) => {\n        const plnRates = ratesData[\"data\"][\"rates\"];\n        const resultValue = amount * plnRates[targetCurrency] / plnRates[sourceCurrency];\n        setResult(\n            `${resultValue.toFixed(2)}${targetCurrency}`\n        );\n    }\n\n    return (\n        <>\n            <Header />\n            <Container>\n                <Form calculateResult={calculateResult} ratesData={ratesData} />\n                <Result result={result} />\n            </Container>\n            <Footer />\n        </>\n    );\n}\nexport default App;","\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nexport const useRatesData = () => {\n    const [ratesData, setRatesData] = useState(\"\");\n\n    useEffect(() => {\n        axios.get(\"https://api.exchangeratesapi.io/latest?base=PLN\")\n            .then(response => setRatesData(response))\n            .catch(() => setRatesData(\"error\"))\n    }, [])\n\n    return ratesData;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const theme = {\n    color: {\n        bigStone: \"CadetBlue\",\n        sunset: \"Teal\",\n        blackend: \"SlateGray\",\n\n    },\n    breakpoint: {\n        mobile: 767,\n    },\n\n}","import { createGlobalStyle } from \"styled-components\";\nimport background from \"./background-picture.jpg\";\n\nexport const GlobalStyle = createGlobalStyle`\n    html {\n        box-sizing: border-box;\n        font-weight: bold;\n        font-family: 'Merienda', sans-serif;\n    }\n    *, ::before, ::after {\n        box-sizing: inherit;\n    }\n    body {\n        background-image: url(${background});\n        background-size: cover;\n        min-height: 100vh;\n        padding-bottom: 50px;\n        position: relative;\n    }\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { theme } from \"./theme.js\"\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyle } from \"./GlobalStyle\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}